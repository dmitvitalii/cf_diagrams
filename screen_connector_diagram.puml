@startuml

class WaylandScreenConnector {
  -server_: WaylandServer*
  +WaylandScreenConnector(ANNOTATED(FramesFd, int) frames_fd)
  +SetFrameCallback(frame_callback: GenerateProcessedFrameCallbackImpl)
  +SetDisplayEventCallback(event_callback: DisplayEventCallback)
}

class WaylandServer {
  +WaylandServer(int wayland_fd)
  +SetFrameCallback(callback: GenerateProcessedFrameCallbackImpl)
  +SetDisplayEventCallback(callback: DisplayEventCallback)
}

class ScreenConnector<ProcessedFrameType> {
  -sc_android_src_: WaylandScreenConnector
  -host_mode_ctrl_: HostModeCtrl
  -on_next_frame_cnt_: unsigned long long int
  -render_confui_cnt_: unsigned long long int
  -sc_frame_multiplexer_: FrameMultiplexer
  -callback_from_streamer_: GenerateProcessedFrameCallback
  -streamer_callback_mutex_: std::mutex
  -streamer_callback_set_cv_: std::condition_variable
  +ScreenConnector(WaylandScreenConnector&, HostModeCtrl&)
  +SetCallback(frame_callback: GenerateProcessedFrameCallback&&)
  +IsCallbackSet() const
  +SetDisplayEventCallback(event_callback: DisplayEventCallback)
  +OnNextFrame()
  +RenderConfirmationUi(uint32_t, uint32_t, uint32_t, uint32_t,std::uint8_t*)
}

class ScreenConnectorInputMultiplexer<ProcessedFrameType> {
  - host_mode_ctrl_: HostModeCtrl
  - multiplexer_: Multiplexer<ProcessedFrameType, Queue>
  - on_next_frame_cnt_: unsigned long long int
  - sc_android_queue_id_: int
  - sc_confui_queue_id_: int
  + PushToAndroidQueue(item: ProcessedFrameType)
  + PushToConfUiQueue(item: ProcessedFrameType)
  + Pop(): ProcessedFrameType
}

ScreenConnector *-- ScreenConnectorInputMultiplexer : referred as FrameMultiplexer >

ScreenConnector *-- WaylandScreenConnector : sets GenerateProcessedFrameCallbackImpl\nand DisplayEventCallback >
WaylandScreenConnector *-- WaylandServer : sets GenerateProcessedFrameCallbackImpl\nand DisplayEventCallback >

@enduml

