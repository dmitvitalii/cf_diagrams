@startuml surfaces_diagram

class Surface {
  + Surface(<color:LightSlateGray>surfaces: Surfaces&</color>)
  + ~Surface()
  + SetRegion(<color:LightSlateGray>region: Region</color>)
  + Attach(<color:LightSlateGray>buffer: wl_resource*</color>)
  + Commit()
  + SetVirtioGpuScanoutId(<color:LightSlateGray>scanout: uint32_t</color>)

  - surfaces_: Surfaces&
  - state_mutex_: std::mutex
  - state_: State

}

class Region {
  + x: int32_t
  + y: int32_t
  + w: int32_t
  + h: int32_t
}

class VirtioGpuMetadata {
  + scanout_id: std::optional<uint32_t>
}

class State {
  + current_frame_number: uint32_t
  + current_buffer: struct wl_resource*
  + pending_buffer: struct wl_resource*
  + region: Region
  + virtio_gpu_metadata_: VirtioGpuMetadata
  + has_notified_surface_create: bool
}


Surface ..> Surfaces : HandleSurfaceFrame\nHandleSurfaceCreated\nHandleSurfaceDestroyed >
Surface o-- State

State o-- Region
State o-- VirtioGpuMetadata

Surface +-- Region
Surface +-- VirtioGpuMetadata
Surface +-- State


@enduml

