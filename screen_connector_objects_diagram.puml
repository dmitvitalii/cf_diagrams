@startuml


struct ScreenConnectorInfo {
  + static constexpr std::uint32_t BytesPerPixel()
  + static std::uint32_t ScreenCount()
  + static std::uint32_t ScreenHeight(display_number: std::uint32_t)
  + static std::uint32_t ScreenWidth(display_number: std::uint32_t)
  + static std::uint32_t ComputeScreenStrideBytes(w: std::uint32_t)
  + static std::uint32_t ComputeScreenSizeInBytes(w: std::uint32_t, h: std::uint32_t)
  + static std::uint32_t ScreenStrideBytes(display_number: std::uint32_t)
  + static std::uint32_t ScreenSizeInBytes(display_number: std::uint32_t)
}

struct ScreenConnectorFrameRenderer {
  + virtual bool RenderConfirmationUi(display_number: std::uint32_t,
                                      frame_width: std::uint32_t,
                                      frame_height: std::uint32_t,
                                      frame_stride_bytes: std::uint32_t,
                                      frame_bytes: std::uint8_t*) = 0
  + virtual bool IsCallbackSet() const = 0
}


class ScreenConnectorQueue<ProcessedFrameType> {
  - buffer_: std::deque<T>
  - q_mutex_: std::unique_ptr<std::mutex>
  - q_empty_: std::condition_variable
  - q_max_size_: int
  + ScreenConnectorQueue(q_max_size = 2)
  + IsEmpty(): bool
  + Size(): auto
  + WaitEmpty()
  + Push(item: T&&)
  + Pop(): T
}

ScreenConnector ..|> ScreenConnectorInfo
ScreenConnector ..|> ScreenConnectorFrameRenderer

ScreenConnectorInputMultiplexer o-- ScreenConnectorQueue : as Queue

@enduml

